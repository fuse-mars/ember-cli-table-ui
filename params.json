{"name":"Ember-cli Table","tagline":"Place for describing my design decisions on creating a table component in ember","body":"# ember-cli-table-ui\r\nPlace for describing my design decisions on creating a table component in ember\r\n\r\n# Inspiration\r\nEmber-table addon from Addepar (https://github.com/Addepar/ember-table), provides a good solution for emberjs developers who want to display data in a table.\r\nHowever, it does not cover a use case of data that needs frequent updates\r\ni.e. Changes made to a cell value has to be persisted to the backend.\r\n\r\nIn this case:\r\n* Ember-data is being used to communicate with the backend\r\n* A path to read the cell value is diffrent from a path used to save new/updated value\r\n* \r\n\r\n# Philosophy\r\n* A table is An HTML structure for creating rows and columns on a Web page. This means that you can use table for multiple reasons, but in our case, a **table** solve a soul purpose of efficiently presenting large number of data.\r\n* Data is Factual information, especially information organized for analysis or used to reason or make decisions, when this data is presented using a table we call it tabiiar data.\r\n* Tabular data is any data that can be displayed in an excel sheet or stored in a database.\r\n\r\n# Design\r\n* A table is composed of **rows** and **columns**.\r\n* Each row is identified by a number (1, 2, 3 ... )\r\n* Each column is identified by a name ('name', 'email' ...)\r\n* Intersection between a row and a column is a **cell**.\r\n* Cells are owner of the displayed **piece of data** (value of a cell, which is visual to the user).\r\n* A piece of data, in Emberjs terms, is represented as an **attribute** of an Ember-Data **Model object**.\r\n* The model-object above in is owned by the row.\r\n* Each column holds information on how to manipulate pieces of data from the model-object.\r\n* By **manipulate** I mean getting and updating value of a cell.\r\n\r\n### Displaying piece of data\r\nSince this key used to get the actual data out of the owning object, is owned by the column, \r\na refresh ma be needed for cells that receive their data in asynchronous way.\r\n\r\nex:\r\n```\r\n// contact is the main object\r\ncontact : {\r\n  id: 0,\r\n  name: \"John Smith\",\r\n  address: 1\r\n}\r\n\r\naddress: {\r\n  id: 1,\r\n  country: \"USA\",\r\n  zip: \"00001\"\r\n}\r\n\r\n// direct (synchronous) data retrieval\r\ncontact.get(\"name\")\r\n// future (asynchronous) data retrieval\r\ncontact.get(\"address.country\")\r\n```\r\n\r\n### Creating/Updating piece of data\r\nWith the concept of DDAU, the update of a cell value will have to trigger an action in the **controller** because this controller is the owner of all data and therefore should be responsible of all changes that happen to its data.\r\n\r\n\r\n# Resource\r\nhttps://blog.udemy.com/html5-tables\r\nhttp://webdesign.about.com/od/tables/a/aa122605.htm\r\nhttp://www.echoecho.com/htmltables.htm\r\nhttp://www.pcmag.com/encyclopedia/term/44496/html-table\r\n","google":"UA-68265226-1","note":"Don't delete this file! It's used internally to help with page regeneration."}